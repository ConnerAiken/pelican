---  
- name: SERVER
  hosts: all
  remote_user: root
  gather_facts: true 
  vars:
    pip_install_packages:
      - name: docker-py
  pre_tasks:
    - name: Update apt cache.
      apt: update_cache=yes cache_valid_time=600 
  roles:
    - geerlingguy.pip
    - geerlingguy.docker
    - role: geerlingguy.nodejs 
      nodejs_version: "9.x"
      nodejs_install_npm_user: root
      npm_config_prefix: /root/.npm-global
      npm_config_unsafe_perm: "true" 

  tasks:

  - name: SERVER | Wait for port 22 to become available.
    local_action: "wait_for port=22 host={{ inventory_hostname }}"  

  - name: install certain python modules for docker
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      state: present
    with_items:
    - { name: docker-py, version: 1.10.6 }
    
  - name: SERVER | Clean artifact path
    file:
      state: absent
    args:
      state: absent
      path: "/var/www/pelican" 

  - name: DOCKER | Stop and remove any running containers
    shell: docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)
    ignore_errors: true

  - name: SERVER | Clone/Pull repo
    git:
      repo: "git@github.com:ConnerAiken/pelican.git"
      dest: /var/www/pelican
      force: yes
    register: git_finished

  - name: NODE | Install npm deps
    npm:
      path: /var/www/pelican 
    register: npm_finished
    when: git_finished.changed  

  - name: NODE | Bundle and build
    shell: npm run build
    register: npm_built
    failed_when: '"ERR!" in npm_built.stderr'
    when: git_finished.changed
    args:
      chdir: /var/www/pelican   

  - name: SERVER | Copy env from home 
    copy:
      src: ~/pelican.env
      dest: /var/www/pelican/.env
      remote_src: yes

  - name: DOCKER | Build the image
    docker_image: >
      name=pelican
      tag=latest
      path=/var/www/pelican
      state=present
      force=yes
      nocache=yes
           
  - name: DOCKER | Create the container
    docker_container:
      name: pelican-app
      image: pelican
      state: started
      published_ports: 
        - 443:443
        - 80:80
      domainname: pelican.fittedtech.com
      restart_policy: always
      env_file: ~/pelican.env
      keep_volumes : yes
      volumes:
        - /etc/letsencrypt:/etc/letsencrypt